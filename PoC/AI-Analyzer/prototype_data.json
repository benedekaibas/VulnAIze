[
  {
    "filename": "CWE476_NULL_Pointer_Dereference__int_04.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE476_NULL_Pointer_Dereference__int_04.c\nLabel Definition File: CWE476_NULL_Pointer_Dereference.label.xml\nTemplate File: sources-sinks-04.tmpl.c\n*/\n/*\n * @description\n * CWE: 476 NULL Pointer Dereference\n * BadSource:  Set data to NULL\n * GoodSource: Initialize data\n * Sinks:\n *    GoodSink: Check for NULL before attempting to print data\n *    BadSink : Print data\n * Flow Variant: 04 Control flow: if(STATIC_CONST_TRUE) and if(STATIC_CONST_FALSE)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n/* The two variables below are declared \"const\", so a tool should\n   be able to identify that reads of these will always return their\n   initialized values. */\nstatic const int STATIC_CONST_TRUE = 1; /* true */\nstatic const int STATIC_CONST_FALSE = 0; /* false */\n\n#ifndef OMITBAD\n\nvoid CWE476_NULL_Pointer_Dereference__int_04_bad()\n{\n    int * data;\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G1() - use badsource and goodsink by changing the second STATIC_CONST_TRUE to STATIC_CONST_FALSE */\nstatic void goodB2G1()\n{\n    int * data;\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the second if */\nstatic void goodB2G2()\n{\n    int * data;\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodG2B1() - use goodsource and badsink by changing the first STATIC_CONST_TRUE to STATIC_CONST_FALSE */\nstatic void goodG2B1()\n{\n    int * data;\n    int tmpData = 5;\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the first if */\nstatic void goodG2B2()\n{\n    int * data;\n    int tmpData = 5;\n    if(STATIC_CONST_TRUE)\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\nvoid CWE476_NULL_Pointer_Dereference__int_04_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE476_NULL_Pointer_Dereference__int_04_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE476_NULL_Pointer_Dereference__int_04_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE476_NULL_Pointer_Dereference__int_04",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE476_NULL_Pointer_Dereference",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "04",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "476",
      "NULL",
      "Pointer",
      "Dereference",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "BadSink",
      ":",
      "Print",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "04",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "and",
      "if",
      "(",
      "STATIC_CONST_FALSE",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "/",
      "*",
      "The",
      "two",
      "variables",
      "below",
      "are",
      "declared",
      "\"",
      "const",
      "\"",
      ",",
      "so",
      "a",
      "tool",
      "should",
      "be",
      "able",
      "to",
      "identify",
      "that",
      "reads",
      "of",
      "these",
      "will",
      "always",
      "return",
      "their",
      "initialized",
      "values",
      ".",
      "*",
      "/",
      "static",
      "const",
      "int",
      "STATIC_CONST_TRUE",
      "=",
      "1",
      ";",
      "/",
      "*",
      "true",
      "*",
      "/",
      "static",
      "const",
      "int",
      "STATIC_CONST_FALSE",
      "=",
      "0",
      ";",
      "/",
      "*",
      "false",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE476_NULL_Pointer_Dereference__int_04_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "second",
      "STATIC_CONST_TRUE",
      "to",
      "STATIC_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "STATIC_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "second",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "first",
      "STATIC_CONST_TRUE",
      "to",
      "STATIC_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "int",
      "tmpData",
      "=",
      "5",
      ";",
      "if",
      "(",
      "STATIC_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "first",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "int",
      "tmpData",
      "=",
      "5",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE476_NULL_Pointer_Dereference__int_04_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int_04_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int_04_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0,
      "null_assignment_count": 3
    },
    "errors": [
      "Potential null pointer dereference at line 22: 'data' might be NULL",
      "Potential null pointer dereference at line 47: 'data' might be NULL",
      "Potential null pointer dereference at line 70: 'data' might be NULL"
    ]
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__dest.label.xml\nTemplate File: sources-sink-52b.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Set data pointer to the bad buffer\n * GoodSource: Set data pointer to the good buffer\n * Sink: cat\n *    BadSink : Copy string to data using strcat\n * Flow Variant: 52 Data flow: data passed as an argument from one function to another to another in three different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink(char * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_badSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink(char * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_goodG2BSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "52b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "bad",
      "buffer",
      "*",
      "GoodSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "good",
      "buffer",
      "*",
      "Sink",
      ":",
      "cat",
      "*",
      "BadSink",
      ":",
      "Copy",
      "string",
      "to",
      "data",
      "using",
      "strcat",
      "*",
      "Flow",
      "Variant",
      ":",
      "52",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "to",
      "another",
      "in",
      "three",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "/",
      "*",
      "all",
      "the",
      "sinks",
      "are",
      "the",
      "same",
      ",",
      "we",
      "just",
      "want",
      "to",
      "know",
      "where",
      "the",
      "hit",
      "originated",
      "if",
      "a",
      "tool",
      "flags",
      "one",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__char_calloc_18.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__char_calloc_18.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-18.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: calloc Allocate data using calloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 18 Control flow: goto statements\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__char_calloc_18_bad()\n{\n    char * data;\n    data = NULL;\n    goto source;\nsource:\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)calloc(100, sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    goto sink;\nsink:\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G() - use badsource and goodsink by reversing the blocks on the second goto statement */\nstatic void goodB2G()\n{\n    char * data;\n    data = NULL;\n    goto source;\nsource:\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)calloc(100, sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    goto sink;\nsink:\n    /* FIX: Deallocate memory */\n    free(data);\n}\n\n/* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */\nstatic void goodG2B()\n{\n    char * data;\n    data = NULL;\n    goto source;\nsource:\n    /* FIX: Use memory allocated on the stack with ALLOCA */\n    data = (char *)ALLOCA(100*sizeof(char));\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    goto sink;\nsink:\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\nvoid CWE401_Memory_Leak__char_calloc_18_good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__char_calloc_18_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__char_calloc_18_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__char_calloc_18",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "18",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "calloc",
      "Allocate",
      "data",
      "using",
      "calloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "18",
      "Control",
      "flow",
      ":",
      "goto",
      "statements",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__char_calloc_18_bad",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "goto",
      "source",
      ";",
      "source",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "calloc",
      "(",
      "100",
      ",",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "goto",
      "sink",
      ";",
      "sink",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "on",
      "the",
      "second",
      "goto",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodB2G",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "goto",
      "source",
      ";",
      "source",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "calloc",
      "(",
      "100",
      ",",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "goto",
      "sink",
      ";",
      "sink",
      ":",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "on",
      "the",
      "first",
      "goto",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "goto",
      "source",
      ";",
      "source",
      ":",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "goto",
      "sink",
      ";",
      "sink",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "void",
      "CWE401_Memory_Leak__char_calloc_18_good",
      "(",
      ")",
      "{",
      "goodB2G",
      "(",
      ")",
      ";",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__char_calloc_18_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__char_calloc_18_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 1,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__char_malloc_61b.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__char_malloc_61b.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-61b.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: malloc Allocate data using malloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 61 Data flow: data returned from one function to another in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nchar * CWE401_Memory_Leak__char_malloc_61b_badSource(char * data)\n{\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)malloc(100*sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    return data;\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B() uses the GoodSource with the BadSink */\nchar * CWE401_Memory_Leak__char_malloc_61b_goodG2BSource(char * data)\n{\n    /* FIX: Use memory allocated on the stack with ALLOCA */\n    data = (char *)ALLOCA(100*sizeof(char));\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    return data;\n}\n\n/* goodB2G() uses the BadSource with the GoodSink */\nchar * CWE401_Memory_Leak__char_malloc_61b_goodB2GSource(char * data)\n{\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)malloc(100*sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    return data;\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__char_malloc_61b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "61b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "malloc",
      "Allocate",
      "data",
      "using",
      "malloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "61",
      "Data",
      "flow",
      ":",
      "data",
      "returned",
      "from",
      "one",
      "function",
      "to",
      "another",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "char",
      "*",
      "CWE401_Memory_Leak__char_malloc_61b_badSource",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "malloc",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "return",
      "data",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "char",
      "*",
      "CWE401_Memory_Leak__char_malloc_61b_goodG2BSource",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "return",
      "data",
      ";",
      "}",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "char",
      "*",
      "CWE401_Memory_Leak__char_malloc_61b_goodB2GSource",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "malloc",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "return",
      "data",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 1,
      "uses_strncpy": 0,
      "num_malloc": 2,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_realloc_51b.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_realloc_51b.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-51b.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 51 Data flow: data passed as an argument from one function to another in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int_realloc_51b_badSink(int * data)\n{\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE401_Memory_Leak__int_realloc_51b_goodG2BSink(int * data)\n{\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n/* goodB2G uses the BadSource with the GoodSink */\nvoid CWE401_Memory_Leak__int_realloc_51b_goodB2GSink(int * data)\n{\n    /* FIX: Deallocate memory */\n    free(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_realloc_51b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "51b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "51",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int_realloc_51b_badSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_realloc_51b_goodG2BSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "/",
      "*",
      "goodB2G",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_realloc_51b_goodB2GSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_realloc_09.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_realloc_09.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-09.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 09 Control flow: if(GLOBAL_CONST_TRUE) and if(GLOBAL_CONST_FALSE)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int_realloc_09_bad()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int *)realloc(data, 100*sizeof(int));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G1() - use badsource and goodsink by changing the second GLOBAL_CONST_TRUE to GLOBAL_CONST_FALSE */\nstatic void goodB2G1()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int *)realloc(data, 100*sizeof(int));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Deallocate memory */\n        free(data);\n    }\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the second if */\nstatic void goodB2G2()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int *)realloc(data, 100*sizeof(int));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* FIX: Deallocate memory */\n        free(data);\n    }\n}\n\n/* goodG2B1() - use goodsource and badsink by changing the first GLOBAL_CONST_TRUE to GLOBAL_CONST_FALSE */\nstatic void goodG2B1()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Use memory allocated on the stack with ALLOCA */\n        data = (int *)ALLOCA(100*sizeof(int));\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the first if */\nstatic void goodG2B2()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* FIX: Use memory allocated on the stack with ALLOCA */\n        data = (int *)ALLOCA(100*sizeof(int));\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\nvoid CWE401_Memory_Leak__int_realloc_09_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__int_realloc_09_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__int_realloc_09_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_realloc_09",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "09",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "09",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "and",
      "if",
      "(",
      "GLOBAL_CONST_FALSE",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int_realloc_09_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "second",
      "GLOBAL_CONST_TRUE",
      "to",
      "GLOBAL_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "second",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "first",
      "GLOBAL_CONST_TRUE",
      "to",
      "GLOBAL_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "first",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "void",
      "CWE401_Memory_Leak__int_realloc_09_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_09_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_09_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 2
    },
    "errors": []
  },
  {
    "filename": "CWE476_NULL_Pointer_Dereference__int64_t_16.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE476_NULL_Pointer_Dereference__int64_t_16.c\nLabel Definition File: CWE476_NULL_Pointer_Dereference.label.xml\nTemplate File: sources-sinks-16.tmpl.c\n*/\n/*\n * @description\n * CWE: 476 NULL Pointer Dereference\n * BadSource:  Set data to NULL\n * GoodSource: Initialize data\n * Sinks:\n *    GoodSink: Check for NULL before attempting to print data\n *    BadSink : Print data\n * Flow Variant: 16 Control flow: while(1)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_16_bad()\n{\n    int64_t * data;\n    while(1)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n        break;\n    }\n    while(1)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n        break;\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G() - use badsource and goodsink by changing the sinks in the second while statement */\nstatic void goodB2G()\n{\n    int64_t * data;\n    while(1)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n        break;\n    }\n    while(1)\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printLongLongLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n        break;\n    }\n}\n\n/* goodG2B() - use goodsource and badsink by changing the sources in the first while statement */\nstatic void goodG2B()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    while(1)\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n        break;\n    }\n    while(1)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n        break;\n    }\n}\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_16_good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_16_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_16_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE476_NULL_Pointer_Dereference__int64_t_16",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE476_NULL_Pointer_Dereference",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "16",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "476",
      "NULL",
      "Pointer",
      "Dereference",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "BadSink",
      ":",
      "Print",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "16",
      "Control",
      "flow",
      ":",
      "while",
      "(",
      "1",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_bad",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "break",
      ";",
      "}",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "break",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "sinks",
      "in",
      "the",
      "second",
      "while",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodB2G",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "break",
      ";",
      "}",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "break",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "sources",
      "in",
      "the",
      "first",
      "while",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "int64_t",
      "tmpData",
      "=",
      "5LL",
      ";",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "break",
      ";",
      "}",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "break",
      ";",
      "}",
      "}",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_good",
      "(",
      ")",
      "{",
      "goodB2G",
      "(",
      ")",
      ";",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0,
      "null_assignment_count": 2
    },
    "errors": [
      "Potential null pointer dereference at line 19: 'data' might be NULL",
      "Potential null pointer dereference at line 41: 'data' might be NULL"
    ]
  },
  {
    "filename": "CWE401_Memory_Leak__int64_t_malloc_54d.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int64_t_malloc_54d.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-54d.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: malloc Allocate data using malloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 54 Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE401_Memory_Leak__int64_t_malloc_54e_badSink(int64_t * data);\n\nvoid CWE401_Memory_Leak__int64_t_malloc_54d_badSink(int64_t * data)\n{\n    CWE401_Memory_Leak__int64_t_malloc_54e_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink(int64_t * data);\n\nvoid CWE401_Memory_Leak__int64_t_malloc_54d_goodG2BSink(int64_t * data)\n{\n    CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink(data);\n}\n\n/* goodB2G uses the BadSource with the GoodSink */\nvoid CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink(int64_t * data);\n\nvoid CWE401_Memory_Leak__int64_t_malloc_54d_goodB2GSink(int64_t * data)\n{\n    CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int64_t_malloc_54d",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "54d",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "malloc",
      "Allocate",
      "data",
      "using",
      "malloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "54",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "through",
      "three",
      "others",
      "to",
      "a",
      "fifth",
      ";",
      "all",
      "five",
      "functions",
      "are",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54e_badSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54d_badSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__int64_t_malloc_54e_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54d_goodG2BSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodB2G",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54d_goodB2GSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__char_malloc_52b.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__char_malloc_52b.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-52b.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: malloc Allocate data using malloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 52 Data flow: data passed as an argument from one function to another to another in three different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE401_Memory_Leak__char_malloc_52c_badSink(char * data);\n\nvoid CWE401_Memory_Leak__char_malloc_52b_badSink(char * data)\n{\n    CWE401_Memory_Leak__char_malloc_52c_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE401_Memory_Leak__char_malloc_52c_goodG2BSink(char * data);\n\nvoid CWE401_Memory_Leak__char_malloc_52b_goodG2BSink(char * data)\n{\n    CWE401_Memory_Leak__char_malloc_52c_goodG2BSink(data);\n}\n\n/* goodB2G uses the BadSource with the GoodSink */\nvoid CWE401_Memory_Leak__char_malloc_52c_goodB2GSink(char * data);\n\nvoid CWE401_Memory_Leak__char_malloc_52b_goodB2GSink(char * data)\n{\n    CWE401_Memory_Leak__char_malloc_52c_goodB2GSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__char_malloc_52b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "52b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "malloc",
      "Allocate",
      "data",
      "using",
      "malloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "52",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "to",
      "another",
      "in",
      "three",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__char_malloc_52c_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__char_malloc_52b_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__char_malloc_52c_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__char_malloc_52c_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__char_malloc_52b_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__char_malloc_52c_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodB2G",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__char_malloc_52c_goodB2GSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__char_malloc_52b_goodB2GSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__char_malloc_52c_goodB2GSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_realloc_34.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_realloc_34.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-34.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 34 Data flow: use of a union containing two methods of accessing the same data (within the same function)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\ntypedef union\n{\n    int * unionFirst;\n    int * unionSecond;\n} CWE401_Memory_Leak__int_realloc_34_unionType;\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int_realloc_34_bad()\n{\n    int * data;\n    CWE401_Memory_Leak__int_realloc_34_unionType myUnion;\n    data = NULL;\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (int *)realloc(data, 100*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    myUnion.unionFirst = data;\n    {\n        int * data = myUnion.unionSecond;\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B() uses the GoodSource with the BadSink */\nstatic void goodG2B()\n{\n    int * data;\n    CWE401_Memory_Leak__int_realloc_34_unionType myUnion;\n    data = NULL;\n    /* FIX: Use memory allocated on the stack with ALLOCA */\n    data = (int *)ALLOCA(100*sizeof(int));\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    myUnion.unionFirst = data;\n    {\n        int * data = myUnion.unionSecond;\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n/* goodB2G() uses the BadSource with the GoodSink */\nstatic void goodB2G()\n{\n    int * data;\n    CWE401_Memory_Leak__int_realloc_34_unionType myUnion;\n    data = NULL;\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (int *)realloc(data, 100*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    myUnion.unionFirst = data;\n    {\n        int * data = myUnion.unionSecond;\n        /* FIX: Deallocate memory */\n        free(data);\n    }\n}\n\nvoid CWE401_Memory_Leak__int_realloc_34_good()\n{\n    goodG2B();\n    goodB2G();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__int_realloc_34_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__int_realloc_34_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_realloc_34",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "34",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "34",
      "Data",
      "flow",
      ":",
      "use",
      "of",
      "a",
      "union",
      "containing",
      "two",
      "methods",
      "of",
      "accessing",
      "the",
      "same",
      "data",
      "(",
      "within",
      "the",
      "same",
      "function",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "typedef",
      "union",
      "{",
      "int",
      "*",
      "unionFirst",
      ";",
      "int",
      "*",
      "unionSecond",
      ";",
      "}",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      ";",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int_realloc_34_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      "myUnion",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "myUnion",
      ".",
      "unionFirst",
      "=",
      "data",
      ";",
      "{",
      "int",
      "*",
      "data",
      "=",
      "myUnion",
      ".",
      "unionSecond",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      "myUnion",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "myUnion",
      ".",
      "unionFirst",
      "=",
      "data",
      ";",
      "{",
      "int",
      "*",
      "data",
      "=",
      "myUnion",
      ".",
      "unionSecond",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "static",
      "void",
      "goodB2G",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      "myUnion",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "myUnion",
      ".",
      "unionFirst",
      "=",
      "data",
      ";",
      "{",
      "int",
      "*",
      "data",
      "=",
      "myUnion",
      ".",
      "unionSecond",
      ";",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE401_Memory_Leak__int_realloc_34_good",
      "(",
      ")",
      "{",
      "goodG2B",
      "(",
      ")",
      ";",
      "goodB2G",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__CWE806.label.xml\nTemplate File: sources-sink-52b.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Initialize data as a large string\n * GoodSource: Initialize data as a small string\n * Sink: snprintf\n *    BadSink : Copy data to string using snprintf\n * Flow Variant: 52 Data flow: data passed as an argument from one function to another to another in three different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifdef _WIN32\n#define SNPRINTF _snwprintf\n#else\n#define SNPRINTF snprintf\n#endif\n\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink(wchar_t * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_badSink(wchar_t * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink(wchar_t * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_goodG2BSink(wchar_t * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "52b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "large",
      "string",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "small",
      "string",
      "*",
      "Sink",
      ":",
      "snprintf",
      "*",
      "BadSink",
      ":",
      "Copy",
      "data",
      "to",
      "string",
      "using",
      "snprintf",
      "*",
      "Flow",
      "Variant",
      ":",
      "52",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "to",
      "another",
      "in",
      "three",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifdef",
      "_WIN32",
      "#",
      "define",
      "SNPRINTF",
      "_snwprintf",
      "#",
      "else",
      "#",
      "define",
      "SNPRINTF",
      "snprintf",
      "#",
      "endif",
      "/",
      "*",
      "all",
      "the",
      "sinks",
      "are",
      "the",
      "same",
      ",",
      "we",
      "just",
      "want",
      "to",
      "know",
      "where",
      "the",
      "hit",
      "originated",
      "if",
      "a",
      "tool",
      "flags",
      "one",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_badSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_goodG2BSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_calloc_51b.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_calloc_51b.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-51b.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: calloc Allocate data using calloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 51 Data flow: data passed as an argument from one function to another in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int_calloc_51b_badSink(int * data)\n{\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE401_Memory_Leak__int_calloc_51b_goodG2BSink(int * data)\n{\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n/* goodB2G uses the BadSource with the GoodSink */\nvoid CWE401_Memory_Leak__int_calloc_51b_goodB2GSink(int * data)\n{\n    /* FIX: Deallocate memory */\n    free(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_calloc_51b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "51b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "calloc",
      "Allocate",
      "data",
      "using",
      "calloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "51",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int_calloc_51b_badSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_calloc_51b_goodG2BSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "/",
      "*",
      "goodB2G",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_calloc_51b_goodB2GSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__dest.label.xml\nTemplate File: sources-sink-10.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Set data pointer to the bad buffer\n * GoodSource: Set data pointer to the good buffer\n * Sink: cpy\n *    BadSink : Copy string to data using wcscpy\n * Flow Variant: 10 Control flow: if(globalTrue) and if(globalFalse)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad()\n{\n    wchar_t * data;\n    wchar_t * dataBadBuffer = (wchar_t *)ALLOCA(50*sizeof(wchar_t));\n    wchar_t * dataGoodBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n    if(globalTrue)\n    {\n        /* FLAW: Set a pointer to a \"small\" buffer. This buffer will be used in the sinks as a destination\n         * buffer in various memory copying functions using a \"large\" source buffer. */\n        data = dataBadBuffer;\n        data[0] = L'\\0'; /* null terminate */\n    }\n    {\n        wchar_t source[100];\n        wmemset(source, L'C', 100-1); /* fill with L'C's */\n        source[100-1] = L'\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        wcscpy(data, source);\n        printWLine(data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B1() - use goodsource and badsink by changing the globalTrue to globalFalse */\nstatic void goodG2B1()\n{\n    wchar_t * data;\n    wchar_t * dataBadBuffer = (wchar_t *)ALLOCA(50*sizeof(wchar_t));\n    wchar_t * dataGoodBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Set a pointer to a \"large\" buffer, thus avoiding buffer overflows in the sinks. */\n        data = dataGoodBuffer;\n        data[0] = L'\\0'; /* null terminate */\n    }\n    {\n        wchar_t source[100];\n        wmemset(source, L'C', 100-1); /* fill with L'C's */\n        source[100-1] = L'\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        wcscpy(data, source);\n        printWLine(data);\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the if statement */\nstatic void goodG2B2()\n{\n    wchar_t * data;\n    wchar_t * dataBadBuffer = (wchar_t *)ALLOCA(50*sizeof(wchar_t));\n    wchar_t * dataGoodBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n    if(globalTrue)\n    {\n        /* FIX: Set a pointer to a \"large\" buffer, thus avoiding buffer overflows in the sinks. */\n        data = dataGoodBuffer;\n        data[0] = L'\\0'; /* null terminate */\n    }\n    {\n        wchar_t source[100];\n        wmemset(source, L'C', 100-1); /* fill with L'C's */\n        source[100-1] = L'\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        wcscpy(data, source);\n        printWLine(data);\n    }\n}\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good()\n{\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "10",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "bad",
      "buffer",
      "*",
      "GoodSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "good",
      "buffer",
      "*",
      "Sink",
      ":",
      "cpy",
      "*",
      "BadSink",
      ":",
      "Copy",
      "string",
      "to",
      "data",
      "using",
      "wcscpy",
      "*",
      "Flow",
      "Variant",
      ":",
      "10",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "globalTrue",
      ")",
      "and",
      "if",
      "(",
      "globalFalse",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad",
      "(",
      ")",
      "{",
      "wchar_t",
      "*",
      "data",
      ";",
      "wchar_t",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "wchar_t",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "globalTrue",
      ")",
      "{",
      "/",
      "*",
      "FLAW",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "small",
      "\"",
      "buffer",
      ".",
      "This",
      "buffer",
      "will",
      "be",
      "used",
      "in",
      "the",
      "sinks",
      "as",
      "a",
      "destination",
      "*",
      "buffer",
      "in",
      "various",
      "memory",
      "copying",
      "functions",
      "using",
      "a",
      "\"",
      "large",
      "\"",
      "source",
      "buffer",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataBadBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "}",
      "{",
      "wchar_t",
      "source",
      "[",
      "100",
      "]",
      ";",
      "wmemset",
      "(",
      "source",
      ",",
      "L",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "L",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "wcscpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printWLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "globalTrue",
      "to",
      "globalFalse",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "wchar_t",
      "*",
      "data",
      ";",
      "wchar_t",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "wchar_t",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "globalFalse",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "large",
      "\"",
      "buffer",
      ",",
      "thus",
      "avoiding",
      "buffer",
      "overflows",
      "in",
      "the",
      "sinks",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataGoodBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "}",
      "{",
      "wchar_t",
      "source",
      "[",
      "100",
      "]",
      ";",
      "wmemset",
      "(",
      "source",
      ",",
      "L",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "L",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "wcscpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printWLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "if",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "wchar_t",
      "*",
      "data",
      ";",
      "wchar_t",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "wchar_t",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "globalTrue",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "large",
      "\"",
      "buffer",
      ",",
      "thus",
      "avoiding",
      "buffer",
      "overflows",
      "in",
      "the",
      "sinks",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataGoodBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "}",
      "{",
      "wchar_t",
      "source",
      "[",
      "100",
      "]",
      ";",
      "wmemset",
      "(",
      "source",
      ",",
      "L",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "L",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "wcscpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printWLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good",
      "(",
      ")",
      "{",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "*",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "*",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "*",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE476_NULL_Pointer_Dereference__int64_t_13.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE476_NULL_Pointer_Dereference__int64_t_13.c\nLabel Definition File: CWE476_NULL_Pointer_Dereference.label.xml\nTemplate File: sources-sinks-13.tmpl.c\n*/\n/*\n * @description\n * CWE: 476 NULL Pointer Dereference\n * BadSource:  Set data to NULL\n * GoodSource: Initialize data\n * Sinks:\n *    GoodSink: Check for NULL before attempting to print data\n *    BadSink : Print data\n * Flow Variant: 13 Control flow: if(GLOBAL_CONST_FIVE==5) and if(GLOBAL_CONST_FIVE!=5)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_13_bad()\n{\n    int64_t * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G1() - use badsource and goodsink by changing the second GLOBAL_CONST_FIVE==5 to GLOBAL_CONST_FIVE!=5 */\nstatic void goodB2G1()\n{\n    int64_t * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printLongLongLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the second if */\nstatic void goodB2G2()\n{\n    int64_t * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printLongLongLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodG2B1() - use goodsource and badsink by changing the first GLOBAL_CONST_FIVE==5 to GLOBAL_CONST_FIVE!=5 */\nstatic void goodG2B1()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the first if */\nstatic void goodG2B2()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n    }\n}\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_13_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_13_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_13_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE476_NULL_Pointer_Dereference__int64_t_13",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE476_NULL_Pointer_Dereference",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "13",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "476",
      "NULL",
      "Pointer",
      "Dereference",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "BadSink",
      ":",
      "Print",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "13",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "and",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_bad",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "second",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      "to",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      "*",
      "/",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "second",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "first",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      "to",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "int64_t",
      "tmpData",
      "=",
      "5LL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "first",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "int64_t",
      "tmpData",
      "=",
      "5LL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0,
      "null_assignment_count": 3
    },
    "errors": [
      "Potential null pointer dereference at line 18: 'data' might be NULL",
      "Potential null pointer dereference at line 43: 'data' might be NULL",
      "Potential null pointer dereference at line 66: 'data' might be NULL"
    ]
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__src.label.xml\nTemplate File: sources-sink-54d.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Initialize data as a large string\n * GoodSource: Initialize data as a small string\n * Sink: cat\n *    BadSink : Copy data to string using strcat\n * Flow Variant: 54 Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink(char * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_badSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink(char * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_goodG2BSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__src",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "54d",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "large",
      "string",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "small",
      "string",
      "*",
      "Sink",
      ":",
      "cat",
      "*",
      "BadSink",
      ":",
      "Copy",
      "data",
      "to",
      "string",
      "using",
      "strcat",
      "*",
      "Flow",
      "Variant",
      ":",
      "54",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "through",
      "three",
      "others",
      "to",
      "a",
      "fifth",
      ";",
      "all",
      "five",
      "functions",
      "are",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "/",
      "*",
      "all",
      "the",
      "sinks",
      "are",
      "the",
      "same",
      ",",
      "we",
      "just",
      "want",
      "to",
      "know",
      "where",
      "the",
      "hit",
      "originated",
      "if",
      "a",
      "tool",
      "flags",
      "one",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int64_t_realloc_17.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int64_t_realloc_17.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-17.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 17 Control flow: for loops\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int64_t_realloc_17_bad()\n{\n    int i,j;\n    int64_t * data;\n    data = NULL;\n    for(i = 0; i < 1; i++)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int64_t *)realloc(data, 100*sizeof(int64_t));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n    }\n    for(j = 0; j < 1; j++)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G() - use badsource and goodsink in the for statements */\nstatic void goodB2G()\n{\n    int i,k;\n    int64_t * data;\n    data = NULL;\n    for(i = 0; i < 1; i++)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int64_t *)realloc(data, 100*sizeof(int64_t));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n    }\n    for(k = 0; k < 1; k++)\n    {\n        /* FIX: Deallocate memory */\n        free(data);\n    }\n}\n\n/* goodG2B() - use goodsource and badsink in the for statements */\nstatic void goodG2B()\n{\n    int h,j;\n    int64_t * data;\n    data = NULL;\n    for(h = 0; h < 1; h++)\n    {\n        /* FIX: Use memory allocated on the stack with ALLOCA */\n        data = (int64_t *)ALLOCA(100*sizeof(int64_t));\n        /* Initialize and make use of data */\n        data[0] = 5LL;\n        printLongLongLine(data[0]);\n    }\n    for(j = 0; j < 1; j++)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\nvoid CWE401_Memory_Leak__int64_t_realloc_17_good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__int64_t_realloc_17_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__int64_t_realloc_17_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int64_t_realloc_17",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "17",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "17",
      "Control",
      "flow",
      ":",
      "for",
      "loops",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int64_t_realloc_17_bad",
      "(",
      ")",
      "{",
      "int",
      "i",
      ",",
      "j",
      ";",
      "int64_t",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "for",
      "(",
      "i",
      "=",
      "0",
      ";",
      "i",
      "<",
      "1",
      ";",
      "i",
      "+",
      "+",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int64_t",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int64_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5LL",
      ";",
      "printLongLongLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "for",
      "(",
      "j",
      "=",
      "0",
      ";",
      "j",
      "<",
      "1",
      ";",
      "j",
      "+",
      "+",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "in",
      "the",
      "for",
      "statements",
      "*",
      "/",
      "static",
      "void",
      "goodB2G",
      "(",
      ")",
      "{",
      "int",
      "i",
      ",",
      "k",
      ";",
      "int64_t",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "for",
      "(",
      "i",
      "=",
      "0",
      ";",
      "i",
      "<",
      "1",
      ";",
      "i",
      "+",
      "+",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int64_t",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int64_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5LL",
      ";",
      "printLongLongLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "for",
      "(",
      "k",
      "=",
      "0",
      ";",
      "k",
      "<",
      "1",
      ";",
      "k",
      "+",
      "+",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "in",
      "the",
      "for",
      "statements",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "int",
      "h",
      ",",
      "j",
      ";",
      "int64_t",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "for",
      "(",
      "h",
      "=",
      "0",
      ";",
      "h",
      "<",
      "1",
      ";",
      "h",
      "+",
      "+",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int64_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int64_t",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5LL",
      ";",
      "printLongLongLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "for",
      "(",
      "j",
      "=",
      "0",
      ";",
      "j",
      "<",
      "1",
      ";",
      "j",
      "+",
      "+",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "void",
      "CWE401_Memory_Leak__int64_t_realloc_17_good",
      "(",
      ")",
      "{",
      "goodB2G",
      "(",
      ")",
      ";",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int64_t_realloc_17_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int64_t_realloc_17_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_realloc_22a.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_realloc_22a.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-22a.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 22 Control flow: Flow controlled by value of a global variable. Sink functions are in a separate file from sources.\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\n/* The global variable below is used to drive control flow in the sink function */\nint CWE401_Memory_Leak__int_realloc_22_badGlobal = 0;\n\nvoid CWE401_Memory_Leak__int_realloc_22_badSink(int * data);\n\nvoid CWE401_Memory_Leak__int_realloc_22_bad()\n{\n    int * data;\n    data = NULL;\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (int *)realloc(data, 100*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    CWE401_Memory_Leak__int_realloc_22_badGlobal = 1; /* true */\n    CWE401_Memory_Leak__int_realloc_22_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* The global variables below are used to drive control flow in the sink functions. */\nint CWE401_Memory_Leak__int_realloc_22_goodB2G1Global = 0;\nint CWE401_Memory_Leak__int_realloc_22_goodB2G2Global = 0;\nint CWE401_Memory_Leak__int_realloc_22_goodG2BGlobal = 0;\n\n/* goodB2G1() - use badsource and goodsink by setting the static variable to false instead of true */\nvoid CWE401_Memory_Leak__int_realloc_22_goodB2G1Sink(int * data);\n\nstatic void goodB2G1()\n{\n    int * data;\n    data = NULL;\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (int *)realloc(data, 100*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    CWE401_Memory_Leak__int_realloc_22_goodB2G1Global = 0; /* false */\n    CWE401_Memory_Leak__int_realloc_22_goodB2G1Sink(data);\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the if in the sink function */\nvoid CWE401_Memory_Leak__int_realloc_22_goodB2G2Sink(int * data);\n\nstatic void goodB2G2()\n{\n    int * data;\n    data = NULL;\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (int *)realloc(data, 100*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    CWE401_Memory_Leak__int_realloc_22_goodB2G2Global = 1; /* true */\n    CWE401_Memory_Leak__int_realloc_22_goodB2G2Sink(data);\n}\n\n/* goodG2B() - use goodsource and badsink */\nvoid CWE401_Memory_Leak__int_realloc_22_goodG2BSink(int * data);\n\nstatic void goodG2B()\n{\n    int * data;\n    data = NULL;\n    /* FIX: Use memory allocated on the stack with ALLOCA */\n    data = (int *)ALLOCA(100*sizeof(int));\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    CWE401_Memory_Leak__int_realloc_22_goodG2BGlobal = 1; /* true */\n    CWE401_Memory_Leak__int_realloc_22_goodG2BSink(data);\n}\n\nvoid CWE401_Memory_Leak__int_realloc_22_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__int_realloc_22_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__int_realloc_22_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_realloc_22a",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "22a",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "22",
      "Control",
      "flow",
      ":",
      "Flow",
      "controlled",
      "by",
      "value",
      "of",
      "a",
      "global",
      "variable",
      ".",
      "Sink",
      "functions",
      "are",
      "in",
      "a",
      "separate",
      "file",
      "from",
      "sources",
      ".",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "The",
      "global",
      "variable",
      "below",
      "is",
      "used",
      "to",
      "drive",
      "control",
      "flow",
      "in",
      "the",
      "sink",
      "function",
      "*",
      "/",
      "int",
      "CWE401_Memory_Leak__int_realloc_22_badGlobal",
      "=",
      "0",
      ";",
      "void",
      "CWE401_Memory_Leak__int_realloc_22_badSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__int_realloc_22_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_22_badGlobal",
      "=",
      "1",
      ";",
      "/",
      "*",
      "true",
      "*",
      "/",
      "CWE401_Memory_Leak__int_realloc_22_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "The",
      "global",
      "variables",
      "below",
      "are",
      "used",
      "to",
      "drive",
      "control",
      "flow",
      "in",
      "the",
      "sink",
      "functions",
      ".",
      "*",
      "/",
      "int",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G1Global",
      "=",
      "0",
      ";",
      "int",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G2Global",
      "=",
      "0",
      ";",
      "int",
      "CWE401_Memory_Leak__int_realloc_22_goodG2BGlobal",
      "=",
      "0",
      ";",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "setting",
      "the",
      "static",
      "variable",
      "to",
      "false",
      "instead",
      "of",
      "true",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G1Sink",
      "(",
      "int",
      "*",
      "data",
      ")",
      ";",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G1Global",
      "=",
      "0",
      ";",
      "/",
      "*",
      "false",
      "*",
      "/",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G1Sink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "if",
      "in",
      "the",
      "sink",
      "function",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G2Sink",
      "(",
      "int",
      "*",
      "data",
      ")",
      ";",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G2Global",
      "=",
      "1",
      ";",
      "/",
      "*",
      "true",
      "*",
      "/",
      "CWE401_Memory_Leak__int_realloc_22_goodB2G2Sink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_realloc_22_goodG2BSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      ";",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_22_goodG2BGlobal",
      "=",
      "1",
      ";",
      "/",
      "*",
      "true",
      "*",
      "/",
      "CWE401_Memory_Leak__int_realloc_22_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "void",
      "CWE401_Memory_Leak__int_realloc_22_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_22_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_22_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE476_NULL_Pointer_Dereference__int_13.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE476_NULL_Pointer_Dereference__int_13.c\nLabel Definition File: CWE476_NULL_Pointer_Dereference.label.xml\nTemplate File: sources-sinks-13.tmpl.c\n*/\n/*\n * @description\n * CWE: 476 NULL Pointer Dereference\n * BadSource:  Set data to NULL\n * GoodSource: Initialize data\n * Sinks:\n *    GoodSink: Check for NULL before attempting to print data\n *    BadSink : Print data\n * Flow Variant: 13 Control flow: if(GLOBAL_CONST_FIVE==5) and if(GLOBAL_CONST_FIVE!=5)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE476_NULL_Pointer_Dereference__int_13_bad()\n{\n    int * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G1() - use badsource and goodsink by changing the second GLOBAL_CONST_FIVE==5 to GLOBAL_CONST_FIVE!=5 */\nstatic void goodB2G1()\n{\n    int * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the second if */\nstatic void goodB2G2()\n{\n    int * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodG2B1() - use goodsource and badsink by changing the first GLOBAL_CONST_FIVE==5 to GLOBAL_CONST_FIVE!=5 */\nstatic void goodG2B1()\n{\n    int * data;\n    int tmpData = 5;\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the first if */\nstatic void goodG2B2()\n{\n    int * data;\n    int tmpData = 5;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\nvoid CWE476_NULL_Pointer_Dereference__int_13_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE476_NULL_Pointer_Dereference__int_13_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE476_NULL_Pointer_Dereference__int_13_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE476_NULL_Pointer_Dereference__int_13",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE476_NULL_Pointer_Dereference",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "13",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "476",
      "NULL",
      "Pointer",
      "Dereference",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "BadSink",
      ":",
      "Print",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "13",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "and",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE476_NULL_Pointer_Dereference__int_13_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "second",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      "to",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      "*",
      "/",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "second",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "first",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      "to",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "int",
      "tmpData",
      "=",
      "5",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "first",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "int",
      "tmpData",
      "=",
      "5",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE476_NULL_Pointer_Dereference__int_13_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int_13_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int_13_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0,
      "null_assignment_count": 3
    },
    "errors": [
      "Potential null pointer dereference at line 18: 'data' might be NULL",
      "Potential null pointer dereference at line 43: 'data' might be NULL",
      "Potential null pointer dereference at line 66: 'data' might be NULL"
    ]
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54d.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54d.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__dest.label.xml\nTemplate File: sources-sink-54d.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Set data pointer to the bad buffer\n * GoodSource: Set data pointer to the good buffer\n * Sink: cpy\n *    BadSink : Copy string to data using wcscpy\n * Flow Variant: 54 Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_badSink(wchar_t * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54d_badSink(wchar_t * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_goodG2BSink(wchar_t * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54d_goodG2BSink(wchar_t * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_goodG2BSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54d",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "54d",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "bad",
      "buffer",
      "*",
      "GoodSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "good",
      "buffer",
      "*",
      "Sink",
      ":",
      "cpy",
      "*",
      "BadSink",
      ":",
      "Copy",
      "string",
      "to",
      "data",
      "using",
      "wcscpy",
      "*",
      "Flow",
      "Variant",
      ":",
      "54",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "through",
      "three",
      "others",
      "to",
      "a",
      "fifth",
      ";",
      "all",
      "five",
      "functions",
      "are",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "/",
      "*",
      "all",
      "the",
      "sinks",
      "are",
      "the",
      "same",
      ",",
      "we",
      "just",
      "want",
      "to",
      "know",
      "where",
      "the",
      "hit",
      "originated",
      "if",
      "a",
      "tool",
      "flags",
      "one",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_badSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54d_badSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_goodG2BSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54d_goodG2BSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_declare_cpy_54e_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67b.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67b.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__src.label.xml\nTemplate File: sources-sink-67b.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Initialize data as a large string\n * GoodSource: Initialize data as a small string\n * Sinks: cat\n *    BadSink : Copy data to string using strcat\n * Flow Variant: 67 Data flow: data passed in a struct from one function to another in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\ntypedef struct _CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType\n{\n    char * structFirst;\n} CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType;\n\n#ifndef OMITBAD\n\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67b_badSink(CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType myStruct)\n{\n    char * data = myStruct.structFirst;\n    {\n        char dest[50] = \"\";\n        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/\n        strcat(dest, data);\n        printLine(data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67b_goodG2BSink(CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType myStruct)\n{\n    char * data = myStruct.structFirst;\n    {\n        char dest[50] = \"\";\n        /* POTENTIAL FLAW: Possible buffer overflow if data is larger than sizeof(dest)-strlen(dest)*/\n        strcat(dest, data);\n        printLine(data);\n    }\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__src",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "67b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "large",
      "string",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "small",
      "string",
      "*",
      "Sinks",
      ":",
      "cat",
      "*",
      "BadSink",
      ":",
      "Copy",
      "data",
      "to",
      "string",
      "using",
      "strcat",
      "*",
      "Flow",
      "Variant",
      ":",
      "67",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "in",
      "a",
      "struct",
      "from",
      "one",
      "function",
      "to",
      "another",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "typedef",
      "struct",
      "_CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType",
      "{",
      "char",
      "*",
      "structFirst",
      ";",
      "}",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType",
      ";",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67b_badSink",
      "(",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType",
      "myStruct",
      ")",
      "{",
      "char",
      "*",
      "data",
      "=",
      "myStruct",
      ".",
      "structFirst",
      ";",
      "{",
      "char",
      "dest",
      "[",
      "50",
      "]",
      "=",
      "\"",
      "\"",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "data",
      "is",
      "larger",
      "than",
      "sizeof",
      "(",
      "dest",
      ")",
      "-",
      "strlen",
      "(",
      "dest",
      ")",
      "*",
      "/",
      "strcat",
      "(",
      "dest",
      ",",
      "data",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67b_goodG2BSink",
      "(",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_67_structType",
      "myStruct",
      ")",
      "{",
      "char",
      "*",
      "data",
      "=",
      "myStruct",
      ".",
      "structFirst",
      ";",
      "{",
      "char",
      "dest",
      "[",
      "50",
      "]",
      "=",
      "\"",
      "\"",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "data",
      "is",
      "larger",
      "than",
      "sizeof",
      "(",
      "dest",
      ")",
      "-",
      "strlen",
      "(",
      "dest",
      ")",
      "*",
      "/",
      "strcat",
      "(",
      "dest",
      ",",
      "data",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53a.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53a.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__dest.label.xml\nTemplate File: sources-sink-53a.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Set data pointer to the bad buffer\n * GoodSource: Set data pointer to the good buffer\n * Sink: cpy\n *    BadSink : Copy string to data using strcpy\n * Flow Variant: 53 Data flow: data passed as an argument from one function through two others to a fourth; all four functions are in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_badSink(char * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_bad()\n{\n    char * data;\n    char * dataBadBuffer = (char *)ALLOCA(50*sizeof(char));\n    char * dataGoodBuffer = (char *)ALLOCA(100*sizeof(char));\n    /* FLAW: Set a pointer to a \"small\" buffer. This buffer will be used in the sinks as a destination\n     * buffer in various memory copying functions using a \"large\" source buffer. */\n    data = dataBadBuffer;\n    data[0] = '\\0'; /* null terminate */\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_goodG2BSink(char * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nstatic void goodG2B()\n{\n    char * data;\n    char * dataBadBuffer = (char *)ALLOCA(50*sizeof(char));\n    char * dataGoodBuffer = (char *)ALLOCA(100*sizeof(char));\n    /* FIX: Set a pointer to a \"large\" buffer, thus avoiding buffer overflows in the sinks. */\n    data = dataGoodBuffer;\n    data[0] = '\\0'; /* null terminate */\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_goodG2BSink(data);\n}\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_good()\n{\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53a",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "53a",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "bad",
      "buffer",
      "*",
      "GoodSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "good",
      "buffer",
      "*",
      "Sink",
      ":",
      "cpy",
      "*",
      "BadSink",
      ":",
      "Copy",
      "string",
      "to",
      "data",
      "using",
      "strcpy",
      "*",
      "Flow",
      "Variant",
      ":",
      "53",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "through",
      "two",
      "others",
      "to",
      "a",
      "fourth",
      ";",
      "all",
      "four",
      "functions",
      "are",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_bad",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "char",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "char",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "FLAW",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "small",
      "\"",
      "buffer",
      ".",
      "This",
      "buffer",
      "will",
      "be",
      "used",
      "in",
      "the",
      "sinks",
      "as",
      "a",
      "destination",
      "*",
      "buffer",
      "in",
      "various",
      "memory",
      "copying",
      "functions",
      "using",
      "a",
      "\"",
      "large",
      "\"",
      "source",
      "buffer",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataBadBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "char",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "char",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "FIX",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "large",
      "\"",
      "buffer",
      ",",
      "thus",
      "avoiding",
      "buffer",
      "overflows",
      "in",
      "the",
      "sinks",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataGoodBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53b_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_good",
      "(",
      ")",
      "{",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "*",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "*",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "*",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_53_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01.c",
    "label": 0,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__dest.label.xml\nTemplate File: sources-sink-01.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Set data pointer to the bad buffer\n * GoodSource: Set data pointer to the good buffer\n * Sink: cpy\n *    BadSink : Copy string to data using strcpy\n * Flow Variant: 01 Baseline\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_bad()\n{\n    char * data;\n    char * dataBadBuffer = (char *)ALLOCA(50*sizeof(char));\n    char * dataGoodBuffer = (char *)ALLOCA(100*sizeof(char));\n    /* FLAW: Set a pointer to a \"small\" buffer. This buffer will be used in the sinks as a destination\n     * buffer in various memory copying functions using a \"large\" source buffer. */\n    data = dataBadBuffer;\n    data[0] = '\\0'; /* null terminate */\n    {\n        char source[100];\n        memset(source, 'C', 100-1); /* fill with 'C's */\n        source[100-1] = '\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        strcpy(data, source);\n        printLine(data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nstatic void goodG2B()\n{\n    char * data;\n    char * dataBadBuffer = (char *)ALLOCA(50*sizeof(char));\n    char * dataGoodBuffer = (char *)ALLOCA(100*sizeof(char));\n    /* FIX: Set a pointer to a \"large\" buffer, thus avoiding buffer overflows in the sinks. */\n    data = dataGoodBuffer;\n    data[0] = '\\0'; /* null terminate */\n    {\n        char source[100];\n        memset(source, 'C', 100-1); /* fill with 'C's */\n        source[100-1] = '\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        strcpy(data, source);\n        printLine(data);\n    }\n}\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_good()\n{\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "01",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "bad",
      "buffer",
      "*",
      "GoodSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "good",
      "buffer",
      "*",
      "Sink",
      ":",
      "cpy",
      "*",
      "BadSink",
      ":",
      "Copy",
      "string",
      "to",
      "data",
      "using",
      "strcpy",
      "*",
      "Flow",
      "Variant",
      ":",
      "01",
      "Baseline",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_bad",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "char",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "char",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "FLAW",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "small",
      "\"",
      "buffer",
      ".",
      "This",
      "buffer",
      "will",
      "be",
      "used",
      "in",
      "the",
      "sinks",
      "as",
      "a",
      "destination",
      "*",
      "buffer",
      "in",
      "various",
      "memory",
      "copying",
      "functions",
      "using",
      "a",
      "\"",
      "large",
      "\"",
      "source",
      "buffer",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataBadBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "{",
      "char",
      "source",
      "[",
      "100",
      "]",
      ";",
      "memset",
      "(",
      "source",
      ",",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "char",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "char",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "FIX",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "large",
      "\"",
      "buffer",
      ",",
      "thus",
      "avoiding",
      "buffer",
      "overflows",
      "in",
      "the",
      "sinks",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataGoodBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "{",
      "char",
      "source",
      "[",
      "100",
      "]",
      ";",
      "memset",
      "(",
      "source",
      ",",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_good",
      "(",
      ")",
      "{",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "*",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "*",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "*",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cpy_01_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 1,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE476_NULL_Pointer_Dereference__int_04.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE476_NULL_Pointer_Dereference__int_04.c\nLabel Definition File: CWE476_NULL_Pointer_Dereference.label.xml\nTemplate File: sources-sinks-04.tmpl.c\n*/\n/*\n * @description\n * CWE: 476 NULL Pointer Dereference\n * BadSource:  Set data to NULL\n * GoodSource: Initialize data\n * Sinks:\n *    GoodSink: Check for NULL before attempting to print data\n *    BadSink : Print data\n * Flow Variant: 04 Control flow: if(STATIC_CONST_TRUE) and if(STATIC_CONST_FALSE)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n/* The two variables below are declared \"const\", so a tool should\n   be able to identify that reads of these will always return their\n   initialized values. */\nstatic const int STATIC_CONST_TRUE = 1; /* true */\nstatic const int STATIC_CONST_FALSE = 0; /* false */\n\n#ifndef OMITBAD\n\nvoid CWE476_NULL_Pointer_Dereference__int_04_bad()\n{\n    int * data;\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G1() - use badsource and goodsink by changing the second STATIC_CONST_TRUE to STATIC_CONST_FALSE */\nstatic void goodB2G1()\n{\n    int * data;\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the second if */\nstatic void goodB2G2()\n{\n    int * data;\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printIntLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodG2B1() - use goodsource and badsink by changing the first STATIC_CONST_TRUE to STATIC_CONST_FALSE */\nstatic void goodG2B1()\n{\n    int * data;\n    int tmpData = 5;\n    if(STATIC_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the first if */\nstatic void goodG2B2()\n{\n    int * data;\n    int tmpData = 5;\n    if(STATIC_CONST_TRUE)\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(STATIC_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printIntLine(*data);\n    }\n}\n\nvoid CWE476_NULL_Pointer_Dereference__int_04_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE476_NULL_Pointer_Dereference__int_04_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE476_NULL_Pointer_Dereference__int_04_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE476_NULL_Pointer_Dereference__int_04",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE476_NULL_Pointer_Dereference",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "04",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "476",
      "NULL",
      "Pointer",
      "Dereference",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "BadSink",
      ":",
      "Print",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "04",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "and",
      "if",
      "(",
      "STATIC_CONST_FALSE",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "/",
      "*",
      "The",
      "two",
      "variables",
      "below",
      "are",
      "declared",
      "\"",
      "const",
      "\"",
      ",",
      "so",
      "a",
      "tool",
      "should",
      "be",
      "able",
      "to",
      "identify",
      "that",
      "reads",
      "of",
      "these",
      "will",
      "always",
      "return",
      "their",
      "initialized",
      "values",
      ".",
      "*",
      "/",
      "static",
      "const",
      "int",
      "STATIC_CONST_TRUE",
      "=",
      "1",
      ";",
      "/",
      "*",
      "true",
      "*",
      "/",
      "static",
      "const",
      "int",
      "STATIC_CONST_FALSE",
      "=",
      "0",
      ";",
      "/",
      "*",
      "false",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE476_NULL_Pointer_Dereference__int_04_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "second",
      "STATIC_CONST_TRUE",
      "to",
      "STATIC_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "STATIC_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "second",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "first",
      "STATIC_CONST_TRUE",
      "to",
      "STATIC_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "int",
      "tmpData",
      "=",
      "5",
      ";",
      "if",
      "(",
      "STATIC_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "first",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "int",
      "tmpData",
      "=",
      "5",
      ";",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "STATIC_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printIntLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE476_NULL_Pointer_Dereference__int_04_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int_04_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int_04_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0,
      "null_assignment_count": 3
    },
    "errors": [
      "Potential null pointer dereference at line 22: 'data' might be NULL",
      "Potential null pointer dereference at line 47: 'data' might be NULL",
      "Potential null pointer dereference at line 70: 'data' might be NULL"
    ]
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__dest.label.xml\nTemplate File: sources-sink-52b.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Set data pointer to the bad buffer\n * GoodSource: Set data pointer to the good buffer\n * Sink: cat\n *    BadSink : Copy string to data using strcat\n * Flow Variant: 52 Data flow: data passed as an argument from one function to another to another in three different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink(char * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_badSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink(char * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_goodG2BSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "52b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "bad",
      "buffer",
      "*",
      "GoodSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "good",
      "buffer",
      "*",
      "Sink",
      ":",
      "cat",
      "*",
      "BadSink",
      ":",
      "Copy",
      "string",
      "to",
      "data",
      "using",
      "strcat",
      "*",
      "Flow",
      "Variant",
      ":",
      "52",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "to",
      "another",
      "in",
      "three",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "/",
      "*",
      "all",
      "the",
      "sinks",
      "are",
      "the",
      "same",
      ",",
      "we",
      "just",
      "want",
      "to",
      "know",
      "where",
      "the",
      "hit",
      "originated",
      "if",
      "a",
      "tool",
      "flags",
      "one",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52b_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cat_52c_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__char_calloc_18.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__char_calloc_18.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-18.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: calloc Allocate data using calloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 18 Control flow: goto statements\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__char_calloc_18_bad()\n{\n    char * data;\n    data = NULL;\n    goto source;\nsource:\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)calloc(100, sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    goto sink;\nsink:\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G() - use badsource and goodsink by reversing the blocks on the second goto statement */\nstatic void goodB2G()\n{\n    char * data;\n    data = NULL;\n    goto source;\nsource:\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)calloc(100, sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    goto sink;\nsink:\n    /* FIX: Deallocate memory */\n    free(data);\n}\n\n/* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */\nstatic void goodG2B()\n{\n    char * data;\n    data = NULL;\n    goto source;\nsource:\n    /* FIX: Use memory allocated on the stack with ALLOCA */\n    data = (char *)ALLOCA(100*sizeof(char));\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    goto sink;\nsink:\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\nvoid CWE401_Memory_Leak__char_calloc_18_good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__char_calloc_18_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__char_calloc_18_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__char_calloc_18",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "18",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "calloc",
      "Allocate",
      "data",
      "using",
      "calloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "18",
      "Control",
      "flow",
      ":",
      "goto",
      "statements",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__char_calloc_18_bad",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "goto",
      "source",
      ";",
      "source",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "calloc",
      "(",
      "100",
      ",",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "goto",
      "sink",
      ";",
      "sink",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "on",
      "the",
      "second",
      "goto",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodB2G",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "goto",
      "source",
      ";",
      "source",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "calloc",
      "(",
      "100",
      ",",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "goto",
      "sink",
      ";",
      "sink",
      ":",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "on",
      "the",
      "first",
      "goto",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "char",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "goto",
      "source",
      ";",
      "source",
      ":",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "goto",
      "sink",
      ";",
      "sink",
      ":",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "void",
      "CWE401_Memory_Leak__char_calloc_18_good",
      "(",
      ")",
      "{",
      "goodB2G",
      "(",
      ")",
      ";",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__char_calloc_18_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__char_calloc_18_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 1,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__char_malloc_61b.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__char_malloc_61b.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-61b.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: malloc Allocate data using malloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 61 Data flow: data returned from one function to another in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nchar * CWE401_Memory_Leak__char_malloc_61b_badSource(char * data)\n{\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)malloc(100*sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    return data;\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B() uses the GoodSource with the BadSink */\nchar * CWE401_Memory_Leak__char_malloc_61b_goodG2BSource(char * data)\n{\n    /* FIX: Use memory allocated on the stack with ALLOCA */\n    data = (char *)ALLOCA(100*sizeof(char));\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    return data;\n}\n\n/* goodB2G() uses the BadSource with the GoodSink */\nchar * CWE401_Memory_Leak__char_malloc_61b_goodB2GSource(char * data)\n{\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (char *)malloc(100*sizeof(char));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    strcpy(data, \"A String\");\n    printLine(data);\n    return data;\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__char_malloc_61b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "61b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "malloc",
      "Allocate",
      "data",
      "using",
      "malloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "61",
      "Data",
      "flow",
      ":",
      "data",
      "returned",
      "from",
      "one",
      "function",
      "to",
      "another",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "char",
      "*",
      "CWE401_Memory_Leak__char_malloc_61b_badSource",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "malloc",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "return",
      "data",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "char",
      "*",
      "CWE401_Memory_Leak__char_malloc_61b_goodG2BSource",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "return",
      "data",
      ";",
      "}",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "char",
      "*",
      "CWE401_Memory_Leak__char_malloc_61b_goodB2GSource",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "char",
      "*",
      ")",
      "malloc",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "char",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "strcpy",
      "(",
      "data",
      ",",
      "\"",
      "A",
      "String",
      "\"",
      ")",
      ";",
      "printLine",
      "(",
      "data",
      ")",
      ";",
      "return",
      "data",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 1,
      "uses_strncpy": 0,
      "num_malloc": 2,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_realloc_51b.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_realloc_51b.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-51b.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 51 Data flow: data passed as an argument from one function to another in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int_realloc_51b_badSink(int * data)\n{\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE401_Memory_Leak__int_realloc_51b_goodG2BSink(int * data)\n{\n    /* POTENTIAL FLAW: No deallocation */\n    ; /* empty statement needed for some flow variants */\n}\n\n/* goodB2G uses the BadSource with the GoodSink */\nvoid CWE401_Memory_Leak__int_realloc_51b_goodB2GSink(int * data)\n{\n    /* FIX: Deallocate memory */\n    free(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_realloc_51b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "51b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "51",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int_realloc_51b_badSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_realloc_51b_goodG2BSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "/",
      "*",
      "goodB2G",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int_realloc_51b_goodB2GSink",
      "(",
      "int",
      "*",
      "data",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_realloc_09.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_realloc_09.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-09.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 09 Control flow: if(GLOBAL_CONST_TRUE) and if(GLOBAL_CONST_FALSE)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int_realloc_09_bad()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int *)realloc(data, 100*sizeof(int));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G1() - use badsource and goodsink by changing the second GLOBAL_CONST_TRUE to GLOBAL_CONST_FALSE */\nstatic void goodB2G1()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int *)realloc(data, 100*sizeof(int));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Deallocate memory */\n        free(data);\n    }\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the second if */\nstatic void goodB2G2()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: Allocate memory on the heap */\n        data = (int *)realloc(data, 100*sizeof(int));\n        if (data == NULL) {exit(-1);}\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* FIX: Deallocate memory */\n        free(data);\n    }\n}\n\n/* goodG2B1() - use goodsource and badsink by changing the first GLOBAL_CONST_TRUE to GLOBAL_CONST_FALSE */\nstatic void goodG2B1()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_FALSE)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Use memory allocated on the stack with ALLOCA */\n        data = (int *)ALLOCA(100*sizeof(int));\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the first if */\nstatic void goodG2B2()\n{\n    int * data;\n    data = NULL;\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* FIX: Use memory allocated on the stack with ALLOCA */\n        data = (int *)ALLOCA(100*sizeof(int));\n        /* Initialize and make use of data */\n        data[0] = 5;\n        printIntLine(data[0]);\n    }\n    if(GLOBAL_CONST_TRUE)\n    {\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\nvoid CWE401_Memory_Leak__int_realloc_09_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__int_realloc_09_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__int_realloc_09_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_realloc_09",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "09",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "09",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "and",
      "if",
      "(",
      "GLOBAL_CONST_FALSE",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int_realloc_09_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "second",
      "GLOBAL_CONST_TRUE",
      "to",
      "GLOBAL_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "second",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "first",
      "GLOBAL_CONST_TRUE",
      "to",
      "GLOBAL_CONST_FALSE",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FALSE",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "first",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_TRUE",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "void",
      "CWE401_Memory_Leak__int_realloc_09_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_09_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_09_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 2
    },
    "errors": []
  },
  {
    "filename": "CWE476_NULL_Pointer_Dereference__int64_t_16.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE476_NULL_Pointer_Dereference__int64_t_16.c\nLabel Definition File: CWE476_NULL_Pointer_Dereference.label.xml\nTemplate File: sources-sinks-16.tmpl.c\n*/\n/*\n * @description\n * CWE: 476 NULL Pointer Dereference\n * BadSource:  Set data to NULL\n * GoodSource: Initialize data\n * Sinks:\n *    GoodSink: Check for NULL before attempting to print data\n *    BadSink : Print data\n * Flow Variant: 16 Control flow: while(1)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_16_bad()\n{\n    int64_t * data;\n    while(1)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n        break;\n    }\n    while(1)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n        break;\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G() - use badsource and goodsink by changing the sinks in the second while statement */\nstatic void goodB2G()\n{\n    int64_t * data;\n    while(1)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n        break;\n    }\n    while(1)\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printLongLongLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n        break;\n    }\n}\n\n/* goodG2B() - use goodsource and badsink by changing the sources in the first while statement */\nstatic void goodG2B()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    while(1)\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n        break;\n    }\n    while(1)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n        break;\n    }\n}\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_16_good()\n{\n    goodB2G();\n    goodG2B();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_16_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_16_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE476_NULL_Pointer_Dereference__int64_t_16",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE476_NULL_Pointer_Dereference",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "16",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "476",
      "NULL",
      "Pointer",
      "Dereference",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "BadSink",
      ":",
      "Print",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "16",
      "Control",
      "flow",
      ":",
      "while",
      "(",
      "1",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_bad",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "break",
      ";",
      "}",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "break",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "sinks",
      "in",
      "the",
      "second",
      "while",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodB2G",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "break",
      ";",
      "}",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "break",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "sources",
      "in",
      "the",
      "first",
      "while",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "int64_t",
      "tmpData",
      "=",
      "5LL",
      ";",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "break",
      ";",
      "}",
      "while",
      "(",
      "1",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "break",
      ";",
      "}",
      "}",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_good",
      "(",
      ")",
      "{",
      "goodB2G",
      "(",
      ")",
      ";",
      "goodG2B",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_16_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0,
      "null_assignment_count": 2
    },
    "errors": [
      "Potential null pointer dereference at line 19: 'data' might be NULL",
      "Potential null pointer dereference at line 41: 'data' might be NULL"
    ]
  },
  {
    "filename": "CWE401_Memory_Leak__int64_t_malloc_54d.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int64_t_malloc_54d.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-54d.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: malloc Allocate data using malloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 54 Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE401_Memory_Leak__int64_t_malloc_54e_badSink(int64_t * data);\n\nvoid CWE401_Memory_Leak__int64_t_malloc_54d_badSink(int64_t * data)\n{\n    CWE401_Memory_Leak__int64_t_malloc_54e_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink(int64_t * data);\n\nvoid CWE401_Memory_Leak__int64_t_malloc_54d_goodG2BSink(int64_t * data)\n{\n    CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink(data);\n}\n\n/* goodB2G uses the BadSource with the GoodSink */\nvoid CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink(int64_t * data);\n\nvoid CWE401_Memory_Leak__int64_t_malloc_54d_goodB2GSink(int64_t * data)\n{\n    CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int64_t_malloc_54d",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "54d",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "malloc",
      "Allocate",
      "data",
      "using",
      "malloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "54",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "through",
      "three",
      "others",
      "to",
      "a",
      "fifth",
      ";",
      "all",
      "five",
      "functions",
      "are",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54e_badSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54d_badSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__int64_t_malloc_54e_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54d_goodG2BSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodB2G",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__int64_t_malloc_54d_goodB2GSink",
      "(",
      "int64_t",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__char_malloc_52b.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__char_malloc_52b.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-52b.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: malloc Allocate data using malloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 52 Data flow: data passed as an argument from one function to another to another in three different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE401_Memory_Leak__char_malloc_52c_badSink(char * data);\n\nvoid CWE401_Memory_Leak__char_malloc_52b_badSink(char * data)\n{\n    CWE401_Memory_Leak__char_malloc_52c_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE401_Memory_Leak__char_malloc_52c_goodG2BSink(char * data);\n\nvoid CWE401_Memory_Leak__char_malloc_52b_goodG2BSink(char * data)\n{\n    CWE401_Memory_Leak__char_malloc_52c_goodG2BSink(data);\n}\n\n/* goodB2G uses the BadSource with the GoodSink */\nvoid CWE401_Memory_Leak__char_malloc_52c_goodB2GSink(char * data);\n\nvoid CWE401_Memory_Leak__char_malloc_52b_goodB2GSink(char * data)\n{\n    CWE401_Memory_Leak__char_malloc_52c_goodB2GSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__char_malloc_52b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "52b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "malloc",
      "Allocate",
      "data",
      "using",
      "malloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "52",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "to",
      "another",
      "in",
      "three",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__char_malloc_52c_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__char_malloc_52b_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__char_malloc_52c_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__char_malloc_52c_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__char_malloc_52b_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__char_malloc_52c_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "/",
      "*",
      "goodB2G",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "void",
      "CWE401_Memory_Leak__char_malloc_52c_goodB2GSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE401_Memory_Leak__char_malloc_52b_goodB2GSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE401_Memory_Leak__char_malloc_52c_goodB2GSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE401_Memory_Leak__int_realloc_34.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__int_realloc_34.c\nLabel Definition File: CWE401_Memory_Leak.c.label.xml\nTemplate File: sources-sinks-34.tmpl.c\n*/\n/*\n * @description\n * CWE: 401 Memory Leak\n * BadSource: realloc Allocate data using realloc()\n * GoodSource: Allocate data on the stack\n * Sinks:\n *    GoodSink: call free() on data\n *    BadSink : no deallocation of data\n * Flow Variant: 34 Data flow: use of a union containing two methods of accessing the same data (within the same function)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\ntypedef union\n{\n    int * unionFirst;\n    int * unionSecond;\n} CWE401_Memory_Leak__int_realloc_34_unionType;\n\n#ifndef OMITBAD\n\nvoid CWE401_Memory_Leak__int_realloc_34_bad()\n{\n    int * data;\n    CWE401_Memory_Leak__int_realloc_34_unionType myUnion;\n    data = NULL;\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (int *)realloc(data, 100*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    myUnion.unionFirst = data;\n    {\n        int * data = myUnion.unionSecond;\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B() uses the GoodSource with the BadSink */\nstatic void goodG2B()\n{\n    int * data;\n    CWE401_Memory_Leak__int_realloc_34_unionType myUnion;\n    data = NULL;\n    /* FIX: Use memory allocated on the stack with ALLOCA */\n    data = (int *)ALLOCA(100*sizeof(int));\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    myUnion.unionFirst = data;\n    {\n        int * data = myUnion.unionSecond;\n        /* POTENTIAL FLAW: No deallocation */\n        ; /* empty statement needed for some flow variants */\n    }\n}\n\n/* goodB2G() uses the BadSource with the GoodSink */\nstatic void goodB2G()\n{\n    int * data;\n    CWE401_Memory_Leak__int_realloc_34_unionType myUnion;\n    data = NULL;\n    /* POTENTIAL FLAW: Allocate memory on the heap */\n    data = (int *)realloc(data, 100*sizeof(int));\n    if (data == NULL) {exit(-1);}\n    /* Initialize and make use of data */\n    data[0] = 5;\n    printIntLine(data[0]);\n    myUnion.unionFirst = data;\n    {\n        int * data = myUnion.unionSecond;\n        /* FIX: Deallocate memory */\n        free(data);\n    }\n}\n\nvoid CWE401_Memory_Leak__int_realloc_34_good()\n{\n    goodG2B();\n    goodB2G();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE401_Memory_Leak__int_realloc_34_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE401_Memory_Leak__int_realloc_34_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE401_Memory_Leak__int_realloc_34",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE401_Memory_Leak",
      ".",
      "c",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "34",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "401",
      "Memory",
      "Leak",
      "*",
      "BadSource",
      ":",
      "realloc",
      "Allocate",
      "data",
      "using",
      "realloc",
      "(",
      ")",
      "*",
      "GoodSource",
      ":",
      "Allocate",
      "data",
      "on",
      "the",
      "stack",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "call",
      "free",
      "(",
      ")",
      "on",
      "data",
      "*",
      "BadSink",
      ":",
      "no",
      "deallocation",
      "of",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "34",
      "Data",
      "flow",
      ":",
      "use",
      "of",
      "a",
      "union",
      "containing",
      "two",
      "methods",
      "of",
      "accessing",
      "the",
      "same",
      "data",
      "(",
      "within",
      "the",
      "same",
      "function",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "typedef",
      "union",
      "{",
      "int",
      "*",
      "unionFirst",
      ";",
      "int",
      "*",
      "unionSecond",
      ";",
      "}",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      ";",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE401_Memory_Leak__int_realloc_34_bad",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      "myUnion",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "myUnion",
      ".",
      "unionFirst",
      "=",
      "data",
      ";",
      "{",
      "int",
      "*",
      "data",
      "=",
      "myUnion",
      ".",
      "unionSecond",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B",
      "(",
      ")",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "static",
      "void",
      "goodG2B",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      "myUnion",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "FIX",
      ":",
      "Use",
      "memory",
      "allocated",
      "on",
      "the",
      "stack",
      "with",
      "ALLOCA",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "myUnion",
      ".",
      "unionFirst",
      "=",
      "data",
      ";",
      "{",
      "int",
      "*",
      "data",
      "=",
      "myUnion",
      ".",
      "unionSecond",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "No",
      "deallocation",
      "*",
      "/",
      ";",
      "/",
      "*",
      "empty",
      "statement",
      "needed",
      "for",
      "some",
      "flow",
      "variants",
      "*",
      "/",
      "}",
      "}",
      "/",
      "*",
      "goodB2G",
      "(",
      ")",
      "uses",
      "the",
      "BadSource",
      "with",
      "the",
      "GoodSink",
      "*",
      "/",
      "static",
      "void",
      "goodB2G",
      "(",
      ")",
      "{",
      "int",
      "*",
      "data",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_unionType",
      "myUnion",
      ";",
      "data",
      "=",
      "NULL",
      ";",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Allocate",
      "memory",
      "on",
      "the",
      "heap",
      "*",
      "/",
      "data",
      "=",
      "(",
      "int",
      "*",
      ")",
      "realloc",
      "(",
      "data",
      ",",
      "100",
      "*",
      "sizeof",
      "(",
      "int",
      ")",
      ")",
      ";",
      "if",
      "(",
      "data",
      "=",
      "=",
      "NULL",
      ")",
      "{",
      "exit",
      "(",
      "-",
      "1",
      ")",
      ";",
      "}",
      "/",
      "*",
      "Initialize",
      "and",
      "make",
      "use",
      "of",
      "data",
      "*",
      "/",
      "data",
      "[",
      "0",
      "]",
      "=",
      "5",
      ";",
      "printIntLine",
      "(",
      "data",
      "[",
      "0",
      "]",
      ")",
      ";",
      "myUnion",
      ".",
      "unionFirst",
      "=",
      "data",
      ";",
      "{",
      "int",
      "*",
      "data",
      "=",
      "myUnion",
      ".",
      "unionSecond",
      ";",
      "/",
      "*",
      "FIX",
      ":",
      "Deallocate",
      "memory",
      "*",
      "/",
      "free",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE401_Memory_Leak__int_realloc_34_good",
      "(",
      ")",
      "{",
      "goodG2B",
      "(",
      ")",
      ";",
      "goodB2G",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE401_Memory_Leak__int_realloc_34_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 1
    },
    "errors": []
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__CWE806.label.xml\nTemplate File: sources-sink-52b.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Initialize data as a large string\n * GoodSource: Initialize data as a small string\n * Sink: snprintf\n *    BadSink : Copy data to string using snprintf\n * Flow Variant: 52 Data flow: data passed as an argument from one function to another to another in three different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifdef _WIN32\n#define SNPRINTF _snwprintf\n#else\n#define SNPRINTF snprintf\n#endif\n\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink(wchar_t * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_badSink(wchar_t * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink(wchar_t * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_goodG2BSink(wchar_t * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "52b",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "large",
      "string",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "small",
      "string",
      "*",
      "Sink",
      ":",
      "snprintf",
      "*",
      "BadSink",
      ":",
      "Copy",
      "data",
      "to",
      "string",
      "using",
      "snprintf",
      "*",
      "Flow",
      "Variant",
      ":",
      "52",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "to",
      "another",
      "to",
      "another",
      "in",
      "three",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifdef",
      "_WIN32",
      "#",
      "define",
      "SNPRINTF",
      "_snwprintf",
      "#",
      "else",
      "#",
      "define",
      "SNPRINTF",
      "snprintf",
      "#",
      "endif",
      "/",
      "*",
      "all",
      "the",
      "sinks",
      "are",
      "the",
      "same",
      ",",
      "we",
      "just",
      "want",
      "to",
      "know",
      "where",
      "the",
      "hit",
      "originated",
      "if",
      "a",
      "tool",
      "flags",
      "one",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_badSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52b_goodG2BSink",
      "(",
      "wchar_t",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__CWE806_wchar_t_declare_snprintf_52c_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__dest.label.xml\nTemplate File: sources-sink-10.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Set data pointer to the bad buffer\n * GoodSource: Set data pointer to the good buffer\n * Sink: cpy\n *    BadSink : Copy string to data using wcscpy\n * Flow Variant: 10 Control flow: if(globalTrue) and if(globalFalse)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad()\n{\n    wchar_t * data;\n    wchar_t * dataBadBuffer = (wchar_t *)ALLOCA(50*sizeof(wchar_t));\n    wchar_t * dataGoodBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n    if(globalTrue)\n    {\n        /* FLAW: Set a pointer to a \"small\" buffer. This buffer will be used in the sinks as a destination\n         * buffer in various memory copying functions using a \"large\" source buffer. */\n        data = dataBadBuffer;\n        data[0] = L'\\0'; /* null terminate */\n    }\n    {\n        wchar_t source[100];\n        wmemset(source, L'C', 100-1); /* fill with L'C's */\n        source[100-1] = L'\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        wcscpy(data, source);\n        printWLine(data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodG2B1() - use goodsource and badsink by changing the globalTrue to globalFalse */\nstatic void goodG2B1()\n{\n    wchar_t * data;\n    wchar_t * dataBadBuffer = (wchar_t *)ALLOCA(50*sizeof(wchar_t));\n    wchar_t * dataGoodBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n    if(globalFalse)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Set a pointer to a \"large\" buffer, thus avoiding buffer overflows in the sinks. */\n        data = dataGoodBuffer;\n        data[0] = L'\\0'; /* null terminate */\n    }\n    {\n        wchar_t source[100];\n        wmemset(source, L'C', 100-1); /* fill with L'C's */\n        source[100-1] = L'\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        wcscpy(data, source);\n        printWLine(data);\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the if statement */\nstatic void goodG2B2()\n{\n    wchar_t * data;\n    wchar_t * dataBadBuffer = (wchar_t *)ALLOCA(50*sizeof(wchar_t));\n    wchar_t * dataGoodBuffer = (wchar_t *)ALLOCA(100*sizeof(wchar_t));\n    if(globalTrue)\n    {\n        /* FIX: Set a pointer to a \"large\" buffer, thus avoiding buffer overflows in the sinks. */\n        data = dataGoodBuffer;\n        data[0] = L'\\0'; /* null terminate */\n    }\n    {\n        wchar_t source[100];\n        wmemset(source, L'C', 100-1); /* fill with L'C's */\n        source[100-1] = L'\\0'; /* null terminate */\n        /* POTENTIAL FLAW: Possible buffer overflow if the size of data is less than the length of source */\n        wcscpy(data, source);\n        printWLine(data);\n    }\n}\n\nvoid CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good()\n{\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__dest",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "10",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "bad",
      "buffer",
      "*",
      "GoodSource",
      ":",
      "Set",
      "data",
      "pointer",
      "to",
      "the",
      "good",
      "buffer",
      "*",
      "Sink",
      ":",
      "cpy",
      "*",
      "BadSink",
      ":",
      "Copy",
      "string",
      "to",
      "data",
      "using",
      "wcscpy",
      "*",
      "Flow",
      "Variant",
      ":",
      "10",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "globalTrue",
      ")",
      "and",
      "if",
      "(",
      "globalFalse",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad",
      "(",
      ")",
      "{",
      "wchar_t",
      "*",
      "data",
      ";",
      "wchar_t",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "wchar_t",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "globalTrue",
      ")",
      "{",
      "/",
      "*",
      "FLAW",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "small",
      "\"",
      "buffer",
      ".",
      "This",
      "buffer",
      "will",
      "be",
      "used",
      "in",
      "the",
      "sinks",
      "as",
      "a",
      "destination",
      "*",
      "buffer",
      "in",
      "various",
      "memory",
      "copying",
      "functions",
      "using",
      "a",
      "\"",
      "large",
      "\"",
      "source",
      "buffer",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataBadBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "}",
      "{",
      "wchar_t",
      "source",
      "[",
      "100",
      "]",
      ";",
      "wmemset",
      "(",
      "source",
      ",",
      "L",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "L",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "wcscpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printWLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "globalTrue",
      "to",
      "globalFalse",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "wchar_t",
      "*",
      "data",
      ";",
      "wchar_t",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "wchar_t",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "globalFalse",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "large",
      "\"",
      "buffer",
      ",",
      "thus",
      "avoiding",
      "buffer",
      "overflows",
      "in",
      "the",
      "sinks",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataGoodBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "}",
      "{",
      "wchar_t",
      "source",
      "[",
      "100",
      "]",
      ";",
      "wmemset",
      "(",
      "source",
      ",",
      "L",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "L",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "wcscpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printWLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "if",
      "statement",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "wchar_t",
      "*",
      "data",
      ";",
      "wchar_t",
      "*",
      "dataBadBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "50",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "wchar_t",
      "*",
      "dataGoodBuffer",
      "=",
      "(",
      "wchar_t",
      "*",
      ")",
      "ALLOCA",
      "(",
      "100",
      "*",
      "sizeof",
      "(",
      "wchar_t",
      ")",
      ")",
      ";",
      "if",
      "(",
      "globalTrue",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Set",
      "a",
      "pointer",
      "to",
      "a",
      "\"",
      "large",
      "\"",
      "buffer",
      ",",
      "thus",
      "avoiding",
      "buffer",
      "overflows",
      "in",
      "the",
      "sinks",
      ".",
      "*",
      "/",
      "data",
      "=",
      "dataGoodBuffer",
      ";",
      "data",
      "[",
      "0",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "}",
      "{",
      "wchar_t",
      "source",
      "[",
      "100",
      "]",
      ";",
      "wmemset",
      "(",
      "source",
      ",",
      "L",
      "'",
      "C",
      "'",
      ",",
      "100",
      "-",
      "1",
      ")",
      ";",
      "/",
      "*",
      "fill",
      "with",
      "L",
      "'",
      "C",
      "'",
      "s",
      "*",
      "/",
      "source",
      "[",
      "100",
      "-",
      "1",
      "]",
      "=",
      "L",
      "'",
      "\\",
      "0",
      "'",
      ";",
      "/",
      "*",
      "null",
      "terminate",
      "*",
      "/",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Possible",
      "buffer",
      "overflow",
      "if",
      "the",
      "size",
      "of",
      "data",
      "is",
      "less",
      "than",
      "the",
      "length",
      "of",
      "source",
      "*",
      "/",
      "wcscpy",
      "(",
      "data",
      ",",
      "source",
      ")",
      ";",
      "printWLine",
      "(",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good",
      "(",
      ")",
      "{",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "*",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "*",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "*",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE121_Stack_Based_Buffer_Overflow__dest_wchar_t_alloca_cpy_10_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  },
  {
    "filename": "CWE476_NULL_Pointer_Dereference__int64_t_13.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE476_NULL_Pointer_Dereference__int64_t_13.c\nLabel Definition File: CWE476_NULL_Pointer_Dereference.label.xml\nTemplate File: sources-sinks-13.tmpl.c\n*/\n/*\n * @description\n * CWE: 476 NULL Pointer Dereference\n * BadSource:  Set data to NULL\n * GoodSource: Initialize data\n * Sinks:\n *    GoodSink: Check for NULL before attempting to print data\n *    BadSink : Print data\n * Flow Variant: 13 Control flow: if(GLOBAL_CONST_FIVE==5) and if(GLOBAL_CONST_FIVE!=5)\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n#ifndef OMITBAD\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_13_bad()\n{\n    int64_t * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n    }\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* goodB2G1() - use badsource and goodsink by changing the second GLOBAL_CONST_FIVE==5 to GLOBAL_CONST_FIVE!=5 */\nstatic void goodB2G1()\n{\n    int64_t * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printLongLongLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodB2G2() - use badsource and goodsink by reversing the blocks in the second if */\nstatic void goodB2G2()\n{\n    int64_t * data;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Set data to NULL */\n        data = NULL;\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* FIX: Check for NULL before attempting to print data */\n        if (data != NULL)\n        {\n            printLongLongLine(*data);\n        }\n        else\n        {\n            printLine(\"data is NULL\");\n        }\n    }\n}\n\n/* goodG2B1() - use goodsource and badsink by changing the first GLOBAL_CONST_FIVE==5 to GLOBAL_CONST_FIVE!=5 */\nstatic void goodG2B1()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    if(GLOBAL_CONST_FIVE!=5)\n    {\n        /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */\n        printLine(\"Benign, fixed string\");\n    }\n    else\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n    }\n}\n\n/* goodG2B2() - use goodsource and badsink by reversing the blocks in the first if */\nstatic void goodG2B2()\n{\n    int64_t * data;\n    int64_t tmpData = 5LL;\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* FIX: Initialize data */\n        {\n            data = &tmpData;\n        }\n    }\n    if(GLOBAL_CONST_FIVE==5)\n    {\n        /* POTENTIAL FLAW: Attempt to use data, which may be NULL */\n        printLongLongLine(*data);\n    }\n}\n\nvoid CWE476_NULL_Pointer_Dereference__int64_t_13_good()\n{\n    goodB2G1();\n    goodB2G2();\n    goodG2B1();\n    goodG2B2();\n}\n\n#endif /* OMITGOOD */\n\n/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */\n\n#ifdef INCLUDEMAIN\n\nint main(int argc, char * argv[])\n{\n    /* seed randomness */\n    srand( (unsigned)time(NULL) );\n#ifndef OMITGOOD\n    printLine(\"Calling good()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_13_good();\n    printLine(\"Finished good()\");\n#endif /* OMITGOOD */\n#ifndef OMITBAD\n    printLine(\"Calling bad()...\");\n    CWE476_NULL_Pointer_Dereference__int64_t_13_bad();\n    printLine(\"Finished bad()\");\n#endif /* OMITBAD */\n    return 0;\n}\n\n#endif\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE476_NULL_Pointer_Dereference__int64_t_13",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE476_NULL_Pointer_Dereference",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sinks",
      "-",
      "13",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "476",
      "NULL",
      "Pointer",
      "Dereference",
      "*",
      "BadSource",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "*",
      "Sinks",
      ":",
      "*",
      "GoodSink",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "BadSink",
      ":",
      "Print",
      "data",
      "*",
      "Flow",
      "Variant",
      ":",
      "13",
      "Control",
      "flow",
      ":",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "and",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "#",
      "ifndef",
      "OMITBAD",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_bad",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "goodB2G1",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "changing",
      "the",
      "second",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      "to",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      "*",
      "/",
      "static",
      "void",
      "goodB2G1",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodB2G2",
      "(",
      ")",
      "-",
      "use",
      "badsource",
      "and",
      "goodsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "second",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodB2G2",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Set",
      "data",
      "to",
      "NULL",
      "*",
      "/",
      "data",
      "=",
      "NULL",
      ";",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Check",
      "for",
      "NULL",
      "before",
      "attempting",
      "to",
      "print",
      "data",
      "*",
      "/",
      "if",
      "(",
      "data",
      "!",
      "=",
      "NULL",
      ")",
      "{",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "else",
      "{",
      "printLine",
      "(",
      "\"",
      "data",
      "is",
      "NULL",
      "\"",
      ")",
      ";",
      "}",
      "}",
      "}",
      "/",
      "*",
      "goodG2B1",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "changing",
      "the",
      "first",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      "to",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      "*",
      "/",
      "static",
      "void",
      "goodG2B1",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "int64_t",
      "tmpData",
      "=",
      "5LL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "!",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "INCIDENTAL",
      ":",
      "CWE",
      "561",
      "Dead",
      "Code",
      ",",
      "the",
      "code",
      "below",
      "will",
      "never",
      "run",
      "*",
      "/",
      "printLine",
      "(",
      "\"",
      "Benign",
      ",",
      "fixed",
      "string",
      "\"",
      ")",
      ";",
      "}",
      "else",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "/",
      "*",
      "goodG2B2",
      "(",
      ")",
      "-",
      "use",
      "goodsource",
      "and",
      "badsink",
      "by",
      "reversing",
      "the",
      "blocks",
      "in",
      "the",
      "first",
      "if",
      "*",
      "/",
      "static",
      "void",
      "goodG2B2",
      "(",
      ")",
      "{",
      "int64_t",
      "*",
      "data",
      ";",
      "int64_t",
      "tmpData",
      "=",
      "5LL",
      ";",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "FIX",
      ":",
      "Initialize",
      "data",
      "*",
      "/",
      "{",
      "data",
      "=",
      "&",
      "tmpData",
      ";",
      "}",
      "}",
      "if",
      "(",
      "GLOBAL_CONST_FIVE",
      "=",
      "=",
      "5",
      ")",
      "{",
      "/",
      "*",
      "POTENTIAL",
      "FLAW",
      ":",
      "Attempt",
      "to",
      "use",
      "data",
      ",",
      "which",
      "may",
      "be",
      "NULL",
      "*",
      "/",
      "printLongLongLine",
      "(",
      "*",
      "data",
      ")",
      ";",
      "}",
      "}",
      "void",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_good",
      "(",
      ")",
      "{",
      "goodB2G1",
      "(",
      ")",
      ";",
      "goodB2G2",
      "(",
      ")",
      ";",
      "goodG2B1",
      "(",
      ")",
      ";",
      "goodG2B2",
      "(",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "/",
      "*",
      "Below",
      "is",
      "the",
      "main",
      "(",
      ")",
      ".",
      "It",
      "is",
      "only",
      "used",
      "when",
      "building",
      "this",
      "testcase",
      "on",
      "its",
      "own",
      "for",
      "testing",
      "or",
      "for",
      "building",
      "a",
      "binary",
      "to",
      "use",
      "in",
      "testing",
      "binary",
      "analysis",
      "tools",
      ".",
      "It",
      "is",
      "not",
      "used",
      "when",
      "compiling",
      "all",
      "the",
      "testcases",
      "as",
      "one",
      "application",
      ",",
      "which",
      "is",
      "how",
      "source",
      "code",
      "analysis",
      "tools",
      "are",
      "tested",
      ".",
      "*",
      "/",
      "#",
      "ifdef",
      "INCLUDEMAIN",
      "int",
      "main",
      "(",
      "int",
      "argc",
      ",",
      "char",
      "*",
      "argv",
      "[",
      "]",
      ")",
      "{",
      "/",
      "*",
      "seed",
      "randomness",
      "*",
      "/",
      "srand",
      "(",
      "(",
      "unsigned",
      ")",
      "time",
      "(",
      "NULL",
      ")",
      ")",
      ";",
      "#",
      "ifndef",
      "OMITGOOD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "good",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_good",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "good",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "printLine",
      "(",
      "\"",
      "Calling",
      "bad",
      "(",
      ")",
      ".",
      ".",
      ".",
      "\"",
      ")",
      ";",
      "CWE476_NULL_Pointer_Dereference__int64_t_13_bad",
      "(",
      ")",
      ";",
      "printLine",
      "(",
      "\"",
      "Finished",
      "bad",
      "(",
      ")",
      "\"",
      ")",
      ";",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "return",
      "0",
      ";",
      "}",
      "#",
      "endif"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0,
      "null_assignment_count": 3
    },
    "errors": [
      "Potential null pointer dereference at line 18: 'data' might be NULL",
      "Potential null pointer dereference at line 43: 'data' might be NULL",
      "Potential null pointer dereference at line 66: 'data' might be NULL"
    ]
  },
  {
    "filename": "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d.c",
    "label": 1,
    "raw_code": "/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__src.label.xml\nTemplate File: sources-sink-54d.tmpl.c\n*/\n/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Initialize data as a large string\n * GoodSource: Initialize data as a small string\n * Sink: cat\n *    BadSink : Copy data to string using strcat\n * Flow Variant: 54 Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files\n *\n * */\n\n#include \"std_testcase.h\"\n\n#include <wchar.h>\n\n/* all the sinks are the same, we just want to know where the hit originated if a tool flags one */\n\n#ifndef OMITBAD\n\n/* bad function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink(char * data);\n\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_badSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink(data);\n}\n\n#endif /* OMITBAD */\n\n#ifndef OMITGOOD\n\n/* good function declaration */\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink(char * data);\n\n/* goodG2B uses the GoodSource with the BadSink */\nvoid CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_goodG2BSink(char * data)\n{\n    CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink(data);\n}\n\n#endif /* OMITGOOD */\n",
    "tokens": [
      "/",
      "*",
      "TEMPLATE",
      "GENERATED",
      "TESTCASE",
      "FILE",
      "Filename",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d",
      ".",
      "c",
      "Label",
      "Definition",
      "File",
      ":",
      "CWE121_Stack_Based_Buffer_Overflow__src",
      ".",
      "label",
      ".",
      "xml",
      "Template",
      "File",
      ":",
      "sources",
      "-",
      "sink",
      "-",
      "54d",
      ".",
      "tmpl",
      ".",
      "c",
      "*",
      "/",
      "/",
      "*",
      "*",
      "@",
      "description",
      "*",
      "CWE",
      ":",
      "121",
      "Stack",
      "Based",
      "Buffer",
      "Overflow",
      "*",
      "BadSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "large",
      "string",
      "*",
      "GoodSource",
      ":",
      "Initialize",
      "data",
      "as",
      "a",
      "small",
      "string",
      "*",
      "Sink",
      ":",
      "cat",
      "*",
      "BadSink",
      ":",
      "Copy",
      "data",
      "to",
      "string",
      "using",
      "strcat",
      "*",
      "Flow",
      "Variant",
      ":",
      "54",
      "Data",
      "flow",
      ":",
      "data",
      "passed",
      "as",
      "an",
      "argument",
      "from",
      "one",
      "function",
      "through",
      "three",
      "others",
      "to",
      "a",
      "fifth",
      ";",
      "all",
      "five",
      "functions",
      "are",
      "in",
      "different",
      "source",
      "files",
      "*",
      "*",
      "*",
      "/",
      "#",
      "include",
      "\"",
      "std_testcase",
      ".",
      "h",
      "\"",
      "#",
      "include",
      "<",
      "wchar",
      ".",
      "h",
      ">",
      "/",
      "*",
      "all",
      "the",
      "sinks",
      "are",
      "the",
      "same",
      ",",
      "we",
      "just",
      "want",
      "to",
      "know",
      "where",
      "the",
      "hit",
      "originated",
      "if",
      "a",
      "tool",
      "flags",
      "one",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITBAD",
      "/",
      "*",
      "bad",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_badSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_badSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITBAD",
      "*",
      "/",
      "#",
      "ifndef",
      "OMITGOOD",
      "/",
      "*",
      "good",
      "function",
      "declaration",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      ";",
      "/",
      "*",
      "goodG2B",
      "uses",
      "the",
      "GoodSource",
      "with",
      "the",
      "BadSink",
      "*",
      "/",
      "void",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54d_goodG2BSink",
      "(",
      "char",
      "*",
      "data",
      ")",
      "{",
      "CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_54e_goodG2BSink",
      "(",
      "data",
      ")",
      ";",
      "}",
      "#",
      "endif",
      "/",
      "*",
      "OMITGOOD",
      "*",
      "/"
    ],
    "features": {
      "uses_strcpy": 0,
      "uses_strncpy": 0,
      "num_malloc": 0,
      "num_free": 0
    },
    "errors": []
  }
]